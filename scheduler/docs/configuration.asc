== Overview

Cook has a lot of options in its configuration file.
This document will attempt to cover all the supported configuration options for the Cook scheduler.
Cook is designed to support multiple config file formats (json, yaml, edn), but today, it only supports edn.
The edn format (pronounced EDEN) is described at https://github.com/edn-format/edn.

In this guide, configuration will be written as fragments.

=== Basic Configuration Options

`:port`::
  This is the port that the REST API will bind to.

`:database`::
  This configures which database Cook will connect to.
  Currently, Cook only supports Datomic.
  Thus, `:database` must be set to a map with a single key: `{:datomic-uri "$DB_URI"}`.
+
Datomic's pretty awesome because it has an in-process embedded in-memory version, which is specified by using an in-memory backend.
To use the in-memory DB, use the URI `datomic:mem://cook-jobs`.
An example URI for connecting to a Datomic free transactor on the host `$HOST` would be  `datomic:free://$HOST:4334/cook-jobs`.
See http://docs.datomic.com/getting-started.html for more information on setting up Datomic.

`:zookeeper`::
  This configures which Zookeeper Cook will connect to.
  You can either have Cook use an embedded Zookeeper (great for development and trying out Cook), or use an external Zookeeper quorum (required for production).
  To use a production Zookeeper quorum located at `$QUORUM` (for example, `$QUORUM=zk1.example.com,zk2.example.com,zk3.example.com/cook`, you should use a map: `{:connection "zk1.example.com:2181,zk2.example.com:2181,zk3.example.com:2181/cook"}`.
+
To use the embedded Zookeeper for development, use the map `{:local? true}`.
By default, the embedded Zookeeper will bind to port 3291.
If need it to bind to another port, you can specify that with the `:local-port` key: e.g. `{:local? true, :local-port 9001}`.

`:mesos`::
  This key configures how Cook will interact with the Mesos cluster.
  See <<mesos_config>> for details.

`:authorization`::
  This key configures how Cook will validate users for multitenant scheduling.
  Cook currently supports a single-user development mode, HTTP Basic authentication, and Kerberos authentication.
  See <<auth_config>> for details.

[[mesos_config]]
==== Mesos Configuration

TODO

[[auth_config]]
==== Authorization Configuration

TODO

=== Scheduler Knobs

=== Debugging Facilities
